/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dao;

import dao.mappers.IMapResultSetIntoEntity;
import dao.model.ZwierzeDoWybieg;
import dao.uow.IUnitOfWork;
import java.sql.Connection;
import java.sql.SQLException;

/**
 *
 * @author TKK
 */
public class ZwierzeDoTypWybieguRepository extends RepositoryBase<ZwierzeDoWybieg> {

    private static final String TABLE_NAME = "zwierze_do_typ_wybiegu";

    public ZwierzeDoTypWybieguRepository(Connection connection, IMapResultSetIntoEntity<ZwierzeDoWybieg> mapper, IUnitOfWork uow) {
        super(connection, mapper, uow);
    }

    @Override
    protected String insertSql() {
        return "insert into"
                + tableName()
                + " (zwierze_id, typ_wybiegu_id)"
                + "values (?,?)";
    }

    @Override
    protected String updateSql() {
        return "update "
                + tableName()
                + " set (zwierze_id, typ_wybiegu_id) ="
                + " (?,?)"
                + " where id = ?";
    }

    @Override
    protected void setUpdate(ZwierzeDoWybieg entity) throws SQLException {
    update.setInt(1, entity.getIdZwierze());
    update.setInt(2, entity.getIdWybieg());
    update.setInt(3, entity.getId());
        
    }

    @Override
    protected void setInsert(ZwierzeDoWybieg entity) throws SQLException {
insert.setInt(1, entity.getIdZwierze());
insert.setInt(2, entity.getIdWybieg());
    }

    @Override
    protected String createTableSql() {
        return "create table"
                + tableName()
                + "(id int id generated by default as identity primary key,"
                + "id_zwierze int,"
                + "id_typ_wybiegu int,"
                + "foreign key (id_zwierze) references "
                + ZwierzetaRepository.TABLE_NAME
                + "(id),"
                + "foreign key (id_typ_wybiegu) references "
                + TypWybieguRepository.TABLE_NAME
                + "(id)";
    }

    @Override
    protected String tableName() {
        return TABLE_NAME;
    }

    @Override
    protected String deleteSql() {
        return " delete from "
                + tableName()
                + " where zwierze_id=? "
                + " and "
                + " typ_wybiegu_id = ?";
    }

    @Override
    public void setDelete(ZwierzeDoWybieg entity) throws SQLException {
        delete.setInt(1, entity.getIdZwierze());
        delete.setInt(2, entity.getIdWybieg());
    }

    @Override
    protected void insertNecessaryData() throws SQLException {
    }

}
